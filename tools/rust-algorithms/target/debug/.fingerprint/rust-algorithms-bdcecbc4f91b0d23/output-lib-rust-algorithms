{"message":"unused import: `std::io`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/ciphers/morse_code.rs","byte_start":35,"byte_end":42,"line_start":2,"line_end":2,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"use std::io;","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/ciphers/morse_code.rs","byte_start":31,"byte_end":43,"line_start":2,"line_end":2,"column_start":1,"column_end":13,"is_primary":true,"text":[{"text":"use std::io;","highlight_start":1,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::io`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ciphers/morse_code.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unnecessary parentheses around index expression","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/ciphers/sha256.rs","byte_start":4486,"byte_end":4487,"line_start":135,"line_end":135,"column_start":19,"column_end":20,"is_primary":true,"text":[{"text":"            chunk[(63 - i)] = len as u8;","highlight_start":19,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/ciphers/sha256.rs","byte_start":4493,"byte_end":4494,"line_start":135,"line_end":135,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"            chunk[(63 - i)] = len as u8;","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_parens)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/ciphers/sha256.rs","byte_start":4486,"byte_end":4487,"line_start":135,"line_end":135,"column_start":19,"column_end":20,"is_primary":true,"text":[{"text":"            chunk[(63 - i)] = len as u8;","highlight_start":19,"highlight_end":20}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/ciphers/sha256.rs","byte_start":4493,"byte_end":4494,"line_start":135,"line_end":135,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"            chunk[(63 - i)] = len as u8;","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around index expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ciphers/sha256.rs:135:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            chunk[(63 - i)] = len as u8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_parens)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            chunk[\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0m63 - i\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m] = len as u8;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            chunk[63 - i] = len as u8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unnecessary parentheses around index expression","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/dynamic_programming/coin_problem.rs","byte_start":1415,"byte_end":1416,"line_start":45,"line_end":45,"column_start":49,"column_end":50,"is_primary":true,"text":[{"text":"                combinations[j] += combinations[(j - coins[i])];","highlight_start":49,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/dynamic_programming/coin_problem.rs","byte_start":1428,"byte_end":1429,"line_start":45,"line_end":45,"column_start":62,"column_end":63,"is_primary":true,"text":[{"text":"                combinations[j] += combinations[(j - coins[i])];","highlight_start":62,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/dynamic_programming/coin_problem.rs","byte_start":1415,"byte_end":1416,"line_start":45,"line_end":45,"column_start":49,"column_end":50,"is_primary":true,"text":[{"text":"                combinations[j] += combinations[(j - coins[i])];","highlight_start":49,"highlight_end":50}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/dynamic_programming/coin_problem.rs","byte_start":1428,"byte_end":1429,"line_start":45,"line_end":45,"column_start":62,"column_end":63,"is_primary":true,"text":[{"text":"                combinations[j] += combinations[(j - coins[i])];","highlight_start":62,"highlight_end":63}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around index expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/dynamic_programming/coin_problem.rs:45:49\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                combinations[j] += combinations[(j - coins[i])];\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                combinations[j] += combinations[\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mj - coins[i]\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m];\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                combinations[j] += combinations[j - coins[i]];\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unnecessary parentheses around index expression","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/searching/binary_search.rs","byte_start":174,"byte_end":175,"line_start":6,"line_end":6,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        is_asc = arr[0] < arr[(arr.len() - 1)];","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/searching/binary_search.rs","byte_start":188,"byte_end":189,"line_start":6,"line_end":6,"column_start":45,"column_end":46,"is_primary":true,"text":[{"text":"        is_asc = arr[0] < arr[(arr.len() - 1)];","highlight_start":45,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/searching/binary_search.rs","byte_start":174,"byte_end":175,"line_start":6,"line_end":6,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        is_asc = arr[0] < arr[(arr.len() - 1)];","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/searching/binary_search.rs","byte_start":188,"byte_end":189,"line_start":6,"line_end":6,"column_start":45,"column_end":46,"is_primary":true,"text":[{"text":"        is_asc = arr[0] < arr[(arr.len() - 1)];","highlight_start":45,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around index expression\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/searching/binary_search.rs:6:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        is_asc = arr[0] < arr[(arr.len() - 1)];\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        is_asc = arr[0] < arr[\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0marr.len() - 1\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m];\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        is_asc = arr[0] < arr[arr.len() - 1];\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unused macro definition: `assert_sorted`","code":{"code":"unused_macros","explanation":null},"level":"warning","spans":[{"file_name":"src/sorting/macros.rs","byte_start":37,"byte_end":50,"line_start":3,"line_end":3,"column_start":14,"column_end":27,"is_primary":true,"text":[{"text":"macro_rules! assert_sorted {","highlight_start":14,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused macro definition: `assert_sorted`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/sorting/macros.rs:3:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmacro_rules! assert_sorted {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_macros)]` on by default\u001b[0m\n\n"}
{"message":"unused macro definition: `assert_not_sorted`","code":{"code":"unused_macros","explanation":null},"level":"warning","spans":[{"file_name":"src/sorting/macros.rs","byte_start":150,"byte_end":167,"line_start":9,"line_end":9,"column_start":14,"column_end":31,"is_primary":true,"text":[{"text":"macro_rules! assert_not_sorted {","highlight_start":14,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused macro definition: `assert_not_sorted`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/sorting/macros.rs:9:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmacro_rules! assert_not_sorted {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused macro definition: `sorting_tests`","code":{"code":"unused_macros","explanation":null},"level":"warning","spans":[{"file_name":"src/sorting/macros.rs","byte_start":268,"byte_end":281,"line_start":15,"line_end":15,"column_start":14,"column_end":27,"is_primary":true,"text":[{"text":"macro_rules! sorting_tests {","highlight_start":14,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused macro definition: `sorting_tests`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/sorting/macros.rs:15:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmacro_rules! sorting_tests {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated associated function `std::array::IntoIter::<T, N>::new`: use `IntoIterator::into_iter` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/ciphers/morse_code.rs","byte_start":758,"byte_end":761,"line_start":22,"line_end":22,"column_start":60,"column_end":63,"is_primary":true,"text":[{"text":"        std::iter::Iterator::collect(std::array::IntoIter::new([$(($key, $value),)*]))","highlight_start":60,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/ciphers/morse_code.rs","byte_start":864,"byte_end":1914,"line_start":27,"line_end":49,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    map! {","highlight_start":5,"highlight_end":11},{"text":"        \"A\" => \".-\",      \"B\" => \"-...\",    \"C\" => \"-.-.\",","highlight_start":1,"highlight_end":59},{"text":"        \"D\" => \"-..\",     \"E\" => \".\",       \"F\" => \"..-.\",","highlight_start":1,"highlight_end":59},{"text":"        \"G\" => \"--.\",     \"H\" => \"....\",    \"I\" => \"..\",","highlight_start":1,"highlight_end":57},{"text":"        \"J\" => \".---\",    \"K\" => \"-.-\",     \"L\" => \".-..\",","highlight_start":1,"highlight_end":59},{"text":"        \"M\" => \"--\",      \"N\" => \"-.\",      \"O\" => \"---\",","highlight_start":1,"highlight_end":58},{"text":"        \"P\" => \".--.\",    \"Q\" => \"--.-\",    \"R\" => \".-.\",","highlight_start":1,"highlight_end":58},{"text":"        \"S\" => \"...\",     \"T\" => \"-\",       \"U\" => \"..-\",","highlight_start":1,"highlight_end":58},{"text":"        \"V\" => \"...-\",    \"W\" => \".--\",     \"X\" => \"-..-\",","highlight_start":1,"highlight_end":59},{"text":"        \"Y\" => \"-.--\",    \"Z\" => \"--..\",","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        \"1\" => \".----\",   \"2\" => \"..---\",   \"3\" => \"...--\",","highlight_start":1,"highlight_end":60},{"text":"        \"4\" => \"....-\",   \"5\" => \".....\",   \"6\" => \"-....\",","highlight_start":1,"highlight_end":60},{"text":"        \"7\" => \"--...\",   \"8\" => \"---..\",   \"9\" => \"----.\",","highlight_start":1,"highlight_end":60},{"text":"        \"0\" => \"-----\",","highlight_start":1,"highlight_end":24},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        \"&\" => \".-...\",   \"@\" => \".--.-.\",  \":\" => \"---...\",","highlight_start":1,"highlight_end":61},{"text":"        \",\" => \"--..--\",  \".\" => \".-.-.-\",  \"'\" => \".----.\",","highlight_start":1,"highlight_end":61},{"text":"        \"\\\"\" => \".-..-.\", \"?\" => \"..--..\",  \"/\" => \"-..-.\",","highlight_start":1,"highlight_end":60},{"text":"        \"=\" => \"-...-\",   \"+\" => \".-.-.\",   \"-\" => \"-....-\",","highlight_start":1,"highlight_end":61},{"text":"        \"(\" => \"-.--.\",   \")\" => \"-.--.-\",  \" \" => \"/\",","highlight_start":1,"highlight_end":56},{"text":"        \"!\" => \"-.-.--\",","highlight_start":1,"highlight_end":25},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"map!","def_site_span":{"file_name":"src/ciphers/morse_code.rs","byte_start":633,"byte_end":649,"line_start":20,"line_end":20,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! map {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(deprecated)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated associated function `std::array::IntoIter::<T, N>::new`: use `IntoIterator::into_iter` instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ciphers/morse_code.rs:22:60\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        std::iter::Iterator::collect(std::array::IntoIter::new([$(($key, $value),)*]))\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    map! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"A\" => \".-\",      \"B\" => \"-...\",    \"C\" => \"-.-.\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"D\" => \"-..\",     \"E\" => \".\",       \"F\" => \"..-.\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"G\" => \"--.\",     \"H\" => \"....\",    \"I\" => \"..\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"!\" => \"-.-.--\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(deprecated)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `map` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"use of deprecated associated function `std::array::IntoIter::<T, N>::new`: use `IntoIterator::into_iter` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/ciphers/morse_code.rs","byte_start":758,"byte_end":761,"line_start":22,"line_end":22,"column_start":60,"column_end":63,"is_primary":true,"text":[{"text":"        std::iter::Iterator::collect(std::array::IntoIter::new([$(($key, $value),)*]))","highlight_start":60,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/ciphers/morse_code.rs","byte_start":2002,"byte_end":3113,"line_start":53,"line_end":75,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    map! {","highlight_start":5,"highlight_end":11},{"text":"        \".-\"   =>  \"A\",      \"-...\" => \"B\",    \"-.-.\" => \"C\",","highlight_start":1,"highlight_end":62},{"text":"        \"-..\"  =>  \"D\",      \".\"    => \"E\",       \"..-.\" => \"F\",","highlight_start":1,"highlight_end":65},{"text":"        \"--.\"  =>  \"G\",      \"....\" => \"H\",    \"..\" => \"I\",","highlight_start":1,"highlight_end":60},{"text":"        \".---\" =>  \"J\",     \"-.-\" => \"K\",     \".-..\" => \"L\",","highlight_start":1,"highlight_end":61},{"text":"        \"--\"   =>  \"M\",       \"-.\" => \"N\",      \"---\" => \"O\",","highlight_start":1,"highlight_end":62},{"text":"        \".--.\" =>  \"P\",     \"--.-\" => \"Q\",    \".-.\" => \"R\",","highlight_start":1,"highlight_end":60},{"text":"        \"...\"  =>  \"S\",      \"-\" => \"T\",       \"..-\" => \"U\",","highlight_start":1,"highlight_end":61},{"text":"        \"...-\" =>  \"V\",     \".--\" => \"W\",     \"-..-\" => \"X\",","highlight_start":1,"highlight_end":61},{"text":"        \"-.--\" =>  \"Y\",     \"--..\" => \"Z\",","highlight_start":1,"highlight_end":43},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        \".----\" => \"1\",    \"..---\" => \"2\",   \"...--\" => \"3\",","highlight_start":1,"highlight_end":61},{"text":"        \"....-\" => \"4\",    \".....\" => \"5\",   \"-....\" => \"6\",","highlight_start":1,"highlight_end":61},{"text":"        \"--...\" => \"7\",    \"---..\" => \"8\",   \"----.\" => \"9\",","highlight_start":1,"highlight_end":61},{"text":"        \"-----\" => \"0\",","highlight_start":1,"highlight_end":24},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        \".-...\" => \"&\",    \".--.-.\" => \"@\",  \"---...\" => \":\",","highlight_start":1,"highlight_end":62},{"text":"        \"--..--\" => \",\",   \".-.-.-\" => \".\",  \".----.\" => \"'\",","highlight_start":1,"highlight_end":62},{"text":"        \".-..-.\" => \"\\\"\",  \"..--..\" => \"?\",  \"-..-.\" => \"/\",","highlight_start":1,"highlight_end":61},{"text":"        \"-...-\" => \"=\",   \".-.-.\" => \"+\",   \"-....-\" => \"-\",","highlight_start":1,"highlight_end":61},{"text":"        \"-.--.\" => \"(\",   \"-.--.-\" => \")\",  \"/\" => \" \",","highlight_start":1,"highlight_end":56},{"text":"        \"-.-.--\" => \"!\",  \" \" => \" \",       \"\" => \"\"","highlight_start":1,"highlight_end":53},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"map!","def_site_span":{"file_name":"src/ciphers/morse_code.rs","byte_start":633,"byte_end":649,"line_start":20,"line_end":20,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! map {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated associated function `std::array::IntoIter::<T, N>::new`: use `IntoIterator::into_iter` instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ciphers/morse_code.rs:22:60\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        std::iter::Iterator::collect(std::array::IntoIter::new([$(($key, $value),)*]))\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    map! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \".-\"   =>  \"A\",      \"-...\" => \"B\",    \"-.-.\" => \"C\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"-..\"  =>  \"D\",      \".\"    => \"E\",       \"..-.\" => \"F\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"--.\"  =>  \"G\",      \"....\" => \"H\",    \"..\" => \"I\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"-.-.--\" => \"!\",  \" \" => \" \",       \"\" => \"\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `map` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"field `vertices` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/graphs/representation.rs","byte_start":190,"byte_end":195,"line_start":8,"line_end":8,"column_start":12,"column_end":17,"is_primary":false,"text":[{"text":"pub struct Graph {","highlight_start":12,"highlight_end":17}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/graphs/representation.rs","byte_start":202,"byte_end":210,"line_start":9,"line_end":9,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    vertices: Vec<Vertex>,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`Graph` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `vertices` is never read\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/graphs/representation.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Graph {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    vertices: Vec<Vertex>,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `Graph` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"function `z_array` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/string/z_algorithm.rs","byte_start":1238,"byte_end":1245,"line_start":42,"line_end":42,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"pub fn z_array<T: Eq>(input: &[T]) -> Vec<usize> {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `z_array` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/string/z_algorithm.rs:42:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn z_array<T: Eq>(input: &[T]) -> Vec<usize> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"returning the result of a `let` binding from a block","code":{"code":"clippy::let_and_return","explanation":null},"level":"warning","spans":[{"file_name":"src/bit_manipulation/basic.rs","byte_start":309,"byte_end":413,"line_start":16,"line_end":20,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    let updated_bits = if set_it {","highlight_start":5,"highlight_end":35},{"text":"        set_bit(cleared_bits, n)","highlight_start":1,"highlight_end":33},{"text":"    } else {","highlight_start":1,"highlight_end":13},{"text":"        cleared_bits","highlight_start":1,"highlight_end":21},{"text":"    };","highlight_start":1,"highlight_end":7}],"label":"unnecessary `let` binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bit_manipulation/basic.rs","byte_start":419,"byte_end":431,"line_start":22,"line_end":22,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    updated_bits","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::let_and_return)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"return the expression directly","code":null,"level":"help","spans":[{"file_name":"src/bit_manipulation/basic.rs","byte_start":309,"byte_end":413,"line_start":16,"line_end":20,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    let updated_bits = if set_it {","highlight_start":5,"highlight_end":35},{"text":"        set_bit(cleared_bits, n)","highlight_start":1,"highlight_end":33},{"text":"    } else {","highlight_start":1,"highlight_end":13},{"text":"        cleared_bits","highlight_start":1,"highlight_end":21},{"text":"    };","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/bit_manipulation/basic.rs","byte_start":419,"byte_end":431,"line_start":22,"line_end":22,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    updated_bits","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"if set_it {\n        set_bit(cleared_bits, n)\n    } else {\n        cleared_bits\n    }","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: returning the result of a `let` binding from a block\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bit_manipulation/basic.rs:22:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let updated_bits = if set_it {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        set_bit(cleared_bits, n)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    } else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        cleared_bits\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munnecessary `let` binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    updated_bits\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::let_and_return)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: return the expression directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mif set_it {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         set_bit(cleared_bits, n)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+     } else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         cleared_bits\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+     }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"this if-then-else expression returns a bool literal","code":{"code":"clippy::needless_bool","explanation":null},"level":"warning","spans":[{"file_name":"src/bit_manipulation/basic.rs","byte_start":474,"byte_end":546,"line_start":26,"line_end":30,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    if get_bit(bits, 0) == 0 {","highlight_start":5,"highlight_end":31},{"text":"        true","highlight_start":1,"highlight_end":13},{"text":"    } else {","highlight_start":1,"highlight_end":13},{"text":"        false","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_bool","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::needless_bool)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"you can reduce it to","code":null,"level":"help","spans":[{"file_name":"src/bit_manipulation/basic.rs","byte_start":474,"byte_end":546,"line_start":26,"line_end":30,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    if get_bit(bits, 0) == 0 {","highlight_start":5,"highlight_end":31},{"text":"        true","highlight_start":1,"highlight_end":13},{"text":"    } else {","highlight_start":1,"highlight_end":13},{"text":"        false","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":"get_bit(bits, 0) == 0","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this if-then-else expression returns a bool literal\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bit_manipulation/basic.rs:26:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if get_bit(bits, 0) == 0 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        true\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    } else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        false\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: you can reduce it to: `get_bit(bits, 0) == 0`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_bool\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::needless_bool)]` on by default\u001b[0m\n\n"}
{"message":"this if-then-else expression returns a bool literal","code":{"code":"clippy::needless_bool","explanation":null},"level":"warning","spans":[{"file_name":"src/bit_manipulation/basic.rs","byte_start":641,"byte_end":713,"line_start":38,"line_end":42,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    if get_bit(bits, 7) == 0 {","highlight_start":5,"highlight_end":31},{"text":"        true","highlight_start":1,"highlight_end":13},{"text":"    } else {","highlight_start":1,"highlight_end":13},{"text":"        false","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_bool","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"you can reduce it to","code":null,"level":"help","spans":[{"file_name":"src/bit_manipulation/basic.rs","byte_start":641,"byte_end":713,"line_start":38,"line_end":42,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    if get_bit(bits, 7) == 0 {","highlight_start":5,"highlight_end":31},{"text":"        true","highlight_start":1,"highlight_end":13},{"text":"    } else {","highlight_start":1,"highlight_end":13},{"text":"        false","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":"get_bit(bits, 7) == 0","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this if-then-else expression returns a bool literal\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bit_manipulation/basic.rs:38:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if get_bit(bits, 7) == 0 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        true\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    } else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        false\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: you can reduce it to: `get_bit(bits, 7) == 0`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_bool\u001b[0m\n\n"}
{"message":"useless conversion to the same type: `std::str::Chars<'_>`","code":{"code":"clippy::useless_conversion","explanation":null},"level":"warning","spans":[{"file_name":"src/ciphers/morse_code.rs","byte_start":221,"byte_end":266,"line_start":9,"line_end":11,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    message","highlight_start":5,"highlight_end":12},{"text":"        .chars()","highlight_start":1,"highlight_end":17},{"text":"        .into_iter()","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::useless_conversion)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider removing `.into_iter()`","code":null,"level":"help","spans":[{"file_name":"src/ciphers/morse_code.rs","byte_start":221,"byte_end":266,"line_start":9,"line_end":11,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    message","highlight_start":5,"highlight_end":12},{"text":"        .chars()","highlight_start":1,"highlight_end":17},{"text":"        .into_iter()","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"message\n        .chars()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: useless conversion to the same type: `std::str::Chars<'_>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ciphers/morse_code.rs:9:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    message\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .chars()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .into_iter()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|____________________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::useless_conversion)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider removing `.into_iter()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mmessage\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         .chars()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"parameter is only used in recursion","code":{"code":"clippy::only_used_in_recursion","explanation":null},"level":"warning","spans":[{"file_name":"src/data_structures/b_tree.rs","byte_start":3231,"byte_end":3235,"line_start":104,"line_end":104,"column_start":39,"column_end":43,"is_primary":true,"text":[{"text":"    fn traverse_node<T: Ord + Debug>(&self, node: &Node<T>, depth: usize) {","highlight_start":39,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"parameter used here","code":null,"level":"note","spans":[{"file_name":"src/data_structures/b_tree.rs","byte_start":3498,"byte_end":3502,"line_start":110,"line_end":110,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                self.traverse_node(&node.children[index], _depth);","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/data_structures/b_tree.rs","byte_start":3778,"byte_end":3782,"line_start":115,"line_end":115,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"            self.traverse_node(node.children.last().unwrap(), _depth);","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::only_used_in_recursion)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: parameter is only used in recursion\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/b_tree.rs:104:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn traverse_node<T: Ord + Debug>(&self, node: &Node<T>, depth: usize) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: parameter used here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/b_tree.rs:110:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                self.traverse_node(&node.children[index], _depth);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            self.traverse_node(node.children.last().unwrap(), _depth);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::only_used_in_recursion)]` on by default\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`usize` -> `usize`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/data_structures/heap.rs","byte_start":1282,"byte_end":1298,"line_start":65,"line_end":65,"column_start":26,"column_end":42,"is_primary":true,"text":[{"text":"            self.pq.swap((k / 2) as usize, k as usize);","highlight_start":26,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::unnecessary_cast)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/data_structures/heap.rs","byte_start":1282,"byte_end":1298,"line_start":65,"line_end":65,"column_start":26,"column_end":42,"is_primary":true,"text":[{"text":"            self.pq.swap((k / 2) as usize, k as usize);","highlight_start":26,"highlight_end":42}],"label":null,"suggested_replacement":"(k / 2)","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`usize` -> `usize`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/heap.rs:65:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            self.pq.swap((k / 2) as usize, k as usize);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `(k / 2)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::unnecessary_cast)]` on by default\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`usize` -> `usize`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/data_structures/heap.rs","byte_start":1300,"byte_end":1310,"line_start":65,"line_end":65,"column_start":44,"column_end":54,"is_primary":true,"text":[{"text":"            self.pq.swap((k / 2) as usize, k as usize);","highlight_start":44,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/data_structures/heap.rs","byte_start":1300,"byte_end":1310,"line_start":65,"line_end":65,"column_start":44,"column_end":54,"is_primary":true,"text":[{"text":"            self.pq.swap((k / 2) as usize, k as usize);","highlight_start":44,"highlight_end":54}],"label":null,"suggested_replacement":"k","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`usize` -> `usize`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/heap.rs:65:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            self.pq.swap((k / 2) as usize, k as usize);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `k`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"manual implementation of an assign operation","code":{"code":"clippy::assign_op_pattern","explanation":null},"level":"warning","spans":[{"file_name":"src/data_structures/heap.rs","byte_start":1325,"byte_end":1334,"line_start":66,"line_end":66,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"            k = k / 2;","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::assign_op_pattern)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"replace it with","code":null,"level":"help","spans":[{"file_name":"src/data_structures/heap.rs","byte_start":1325,"byte_end":1334,"line_start":66,"line_end":66,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"            k = k / 2;","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"k /= 2","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: manual implementation of an assign operation\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/heap.rs:66:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            k = k / 2;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: replace it with: `k /= 2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::assign_op_pattern)]` on by default\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`usize` -> `usize`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/data_structures/heap.rs","byte_start":1690,"byte_end":1700,"line_start":79,"line_end":79,"column_start":26,"column_end":36,"is_primary":true,"text":[{"text":"            self.pq.swap(k as usize, j as usize);","highlight_start":26,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/data_structures/heap.rs","byte_start":1690,"byte_end":1700,"line_start":79,"line_end":79,"column_start":26,"column_end":36,"is_primary":true,"text":[{"text":"            self.pq.swap(k as usize, j as usize);","highlight_start":26,"highlight_end":36}],"label":null,"suggested_replacement":"k","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`usize` -> `usize`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/heap.rs:79:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            self.pq.swap(k as usize, j as usize);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `k`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`usize` -> `usize`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/data_structures/heap.rs","byte_start":1702,"byte_end":1712,"line_start":79,"line_end":79,"column_start":38,"column_end":48,"is_primary":true,"text":[{"text":"            self.pq.swap(k as usize, j as usize);","highlight_start":38,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/data_structures/heap.rs","byte_start":1702,"byte_end":1712,"line_start":79,"line_end":79,"column_start":38,"column_end":48,"is_primary":true,"text":[{"text":"            self.pq.swap(k as usize, j as usize);","highlight_start":38,"highlight_end":48}],"label":null,"suggested_replacement":"j","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`usize` -> `usize`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/heap.rs:79:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            self.pq.swap(k as usize, j as usize);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `j`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"you should consider adding a `Default` implementation for `MaxHeap<T>`","code":{"code":"clippy::new_without_default","explanation":null},"level":"warning","spans":[{"file_name":"src/data_structures/heap.rs","byte_start":1861,"byte_end":1933,"line_start":90,"line_end":92,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    pub fn new() -> MaxHeap<T> {","highlight_start":5,"highlight_end":33},{"text":"        MaxHeap { heap: Heap::new() }","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::new_without_default)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try adding this","code":null,"level":"help","spans":[{"file_name":"src/data_structures/heap.rs","byte_start":1824,"byte_end":1824,"line_start":89,"line_end":89,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"impl<T: Ord + Copy> MaxHeap<T> {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"impl<T: Ord + Copy> Default for MaxHeap<T> {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: you should consider adding a `Default` implementation for `MaxHeap<T>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/heap.rs:90:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new() -> MaxHeap<T> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MaxHeap { heap: Heap::new() }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::new_without_default)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try adding this\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ impl<T: Ord + Copy> Default for MaxHeap<T> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+     fn default() -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         Self::new()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+     }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"you should consider adding a `Default` implementation for `MinHeap<T>`","code":{"code":"clippy::new_without_default","explanation":null},"level":"warning","spans":[{"file_name":"src/data_structures/heap.rs","byte_start":2409,"byte_end":2481,"line_start":120,"line_end":122,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    pub fn new() -> MinHeap<T> {","highlight_start":5,"highlight_end":33},{"text":"        MinHeap { heap: Heap::new() }","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try adding this","code":null,"level":"help","spans":[{"file_name":"src/data_structures/heap.rs","byte_start":2372,"byte_end":2372,"line_start":119,"line_end":119,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"impl<T: Ord + Copy> MinHeap<T> {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"impl<T: Ord + Copy> Default for MinHeap<T> {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: you should consider adding a `Default` implementation for `MinHeap<T>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/heap.rs:120:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new() -> MinHeap<T> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MinHeap { heap: Heap::new() }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try adding this\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ impl<T: Ord + Copy> Default for MinHeap<T> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+     fn default() -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         Self::new()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+     }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"you should consider adding a `Default` implementation for `LinkedList<T>`","code":{"code":"clippy::new_without_default","explanation":null},"level":"warning","spans":[{"file_name":"src/data_structures/linked_list.rs","byte_start":668,"byte_end":792,"line_start":37,"line_end":43,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    pub fn new() -> Self {","highlight_start":5,"highlight_end":27},{"text":"        Self {","highlight_start":1,"highlight_end":15},{"text":"            head: None,","highlight_start":1,"highlight_end":24},{"text":"            tail: None,","highlight_start":1,"highlight_end":24},{"text":"            length: 0,","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try adding this","code":null,"level":"help","spans":[{"file_name":"src/data_structures/linked_list.rs","byte_start":640,"byte_end":640,"line_start":36,"line_end":36,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"impl<T> LinkedList<T> {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"impl<T> Default for LinkedList<T> {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: you should consider adding a `Default` implementation for `LinkedList<T>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/linked_list.rs:37:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new() -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            head: None,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            tail: None,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            length: 0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try adding this\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ impl<T> Default for LinkedList<T> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+     fn default() -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         Self::new()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+     }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"struct `LinkedList` has a public `len` method, but no `is_empty` method","code":{"code":"clippy::len_without_is_empty","explanation":null},"level":"warning","spans":[{"file_name":"src/data_structures/linked_list.rs","byte_start":798,"byte_end":824,"line_start":45,"line_end":45,"column_start":5,"column_end":31,"is_primary":true,"text":[{"text":"    pub fn len(&self) -> usize {","highlight_start":5,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_without_is_empty","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::len_without_is_empty)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct `LinkedList` has a public `len` method, but no `is_empty` method\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/linked_list.rs:45:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn len(&self) -> usize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_without_is_empty\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::len_without_is_empty)]` on by default\u001b[0m\n\n"}
{"message":"this expression creates a reference which is immediately dereferenced by the compiler","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"src/data_structures/linked_list.rs","byte_start":3225,"byte_end":3229,"line_start":122,"line_end":122,"column_start":55,"column_end":59,"is_primary":true,"text":[{"text":"                            Some(_) => Some(Rc::clone(&val)),","highlight_start":55,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::needless_borrow)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/data_structures/linked_list.rs","byte_start":3225,"byte_end":3229,"line_start":122,"line_end":122,"column_start":55,"column_end":59,"is_primary":true,"text":[{"text":"                            Some(_) => Some(Rc::clone(&val)),","highlight_start":55,"highlight_end":59}],"label":null,"suggested_replacement":"val","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this expression creates a reference which is immediately dereferenced by the compiler\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/linked_list.rs:122:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   Some(_) => Some(Rc::clone(&val)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `val`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::needless_borrow)]` on by default\u001b[0m\n\n"}
{"message":"manual implementation of `Option::map`","code":{"code":"clippy::manual_map","explanation":null},"level":"warning","spans":[{"file_name":"src/data_structures/linked_list.rs","byte_start":4281,"byte_end":4384,"line_start":160,"line_end":163,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        match &self.head {","highlight_start":9,"highlight_end":27},{"text":"            Some(head) => Some(Rc::clone(head)),","highlight_start":1,"highlight_end":49},{"text":"            None => None,","highlight_start":1,"highlight_end":26},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_map","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::manual_map)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try this","code":null,"level":"help","spans":[{"file_name":"src/data_structures/linked_list.rs","byte_start":4281,"byte_end":4384,"line_start":160,"line_end":163,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        match &self.head {","highlight_start":9,"highlight_end":27},{"text":"            Some(head) => Some(Rc::clone(head)),","highlight_start":1,"highlight_end":49},{"text":"            None => None,","highlight_start":1,"highlight_end":26},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":"self.head.as_ref().map(|head| Rc::clone(head))","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: manual implementation of `Option::map`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/linked_list.rs:160:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        match &self.head {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Some(head) => Some(Rc::clone(head)),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            None => None,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try this: `self.head.as_ref().map(|head| Rc::clone(head))`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_map\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::manual_map)]` on by default\u001b[0m\n\n"}
{"message":"manual implementation of `Option::map`","code":{"code":"clippy::manual_map","explanation":null},"level":"warning","spans":[{"file_name":"src/data_structures/linked_list.rs","byte_start":4449,"byte_end":4552,"line_start":167,"line_end":170,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        match &self.tail {","highlight_start":9,"highlight_end":27},{"text":"            Some(tail) => Some(Rc::clone(tail)),","highlight_start":1,"highlight_end":49},{"text":"            None => None,","highlight_start":1,"highlight_end":26},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_map","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try this","code":null,"level":"help","spans":[{"file_name":"src/data_structures/linked_list.rs","byte_start":4449,"byte_end":4552,"line_start":167,"line_end":170,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        match &self.tail {","highlight_start":9,"highlight_end":27},{"text":"            Some(tail) => Some(Rc::clone(tail)),","highlight_start":1,"highlight_end":49},{"text":"            None => None,","highlight_start":1,"highlight_end":26},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":"self.tail.as_ref().map(|tail| Rc::clone(tail))","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: manual implementation of `Option::map`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/linked_list.rs:167:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m167\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        match &self.tail {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m168\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Some(tail) => Some(Rc::clone(tail)),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            None => None,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try this: `self.tail.as_ref().map(|tail| Rc::clone(tail))`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_map\u001b[0m\n\n"}
{"message":"you should consider adding a `Default` implementation for `Queue<T>`","code":{"code":"clippy::new_without_default","explanation":null},"level":"warning","spans":[{"file_name":"src/data_structures/queue.rs","byte_start":65,"byte_end":127,"line_start":6,"line_end":8,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    pub fn new() -> Self {","highlight_start":5,"highlight_end":27},{"text":"        Queue { vec: Vec::new() }","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try adding this","code":null,"level":"help","spans":[{"file_name":"src/data_structures/queue.rs","byte_start":42,"byte_end":42,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"impl<T> Queue<T> {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"impl<T> Default for Queue<T> {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: you should consider adding a `Default` implementation for `Queue<T>`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/queue.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new() -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Queue { vec: Vec::new() }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try adding this\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ impl<T> Default for Queue<T> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+     fn default() -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         Self::new()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+     }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ }\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"you should consider adding a `Default` implementation for `Stack<T>`","code":{"code":"clippy::new_without_default","explanation":null},"level":"warning","spans":[{"file_name":"src/data_structures/stack.rs","byte_start":205,"byte_end":267,"line_start":8,"line_end":10,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    pub fn new() -> Self {","highlight_start":5,"highlight_end":27},{"text":"        Stack { vec: Vec::new() }","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try adding this","code":null,"level":"help","spans":[{"file_name":"src/data_structures/stack.rs","byte_start":98,"byte_end":98,"line_start":6,"line_end":6,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"impl<T> Stack<T> {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"impl<T> Default for Stack<T> {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: you should consider adding a `Default` implementation for `Stack<T>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/stack.rs:8:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new() -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Stack { vec: Vec::new() }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try adding this\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ impl<T> Default for Stack<T> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+     fn default() -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+         Self::new()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+     }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`usize` -> `usize`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/dynamic_programming/rod_cutting.rs","byte_start":670,"byte_end":691,"line_start":32,"line_end":32,"column_start":27,"column_end":48,"is_primary":true,"text":[{"text":"    let mut val = vec![0; (length + 1) as usize];","highlight_start":27,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/dynamic_programming/rod_cutting.rs","byte_start":670,"byte_end":691,"line_start":32,"line_end":32,"column_start":27,"column_end":48,"is_primary":true,"text":[{"text":"    let mut val = vec![0; (length + 1) as usize];","highlight_start":27,"highlight_end":48}],"label":null,"suggested_replacement":"(length + 1)","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`usize` -> `usize`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/dynamic_programming/rod_cutting.rs:32:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut val = vec![0; (length + 1) as usize];\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `(length + 1)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`usize` -> `usize`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/dynamic_programming/rod_cutting.rs","byte_start":1001,"byte_end":1016,"line_start":45,"line_end":45,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"    val[length as usize]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/dynamic_programming/rod_cutting.rs","byte_start":1001,"byte_end":1016,"line_start":45,"line_end":45,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"    val[length as usize]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"length","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`usize` -> `usize`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/dynamic_programming/rod_cutting.rs:45:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    val[length as usize]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `length`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`f64` -> `f64`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/general/convex_hull.rs","byte_start":231,"byte_end":253,"line_start":8,"line_end":8,"column_start":17,"column_end":39,"is_primary":true,"text":[{"text":"                ((x.1 - min.1) as f64).atan2((x.0 - min.0) as f64),","highlight_start":17,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/general/convex_hull.rs","byte_start":231,"byte_end":253,"line_start":8,"line_end":8,"column_start":17,"column_end":39,"is_primary":true,"text":[{"text":"                ((x.1 - min.1) as f64).atan2((x.0 - min.0) as f64),","highlight_start":17,"highlight_end":39}],"label":null,"suggested_replacement":"(x.1 - min.1)","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`f64` -> `f64`)\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/general/convex_hull.rs:8:17\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                ((x.1 - min.1) as f64).atan2((x.0 - min.0) as f64),\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `(x.1 - min.1)`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`f64` -> `f64`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/general/convex_hull.rs","byte_start":260,"byte_end":280,"line_start":8,"line_end":8,"column_start":46,"column_end":66,"is_primary":true,"text":[{"text":"                ((x.1 - min.1) as f64).atan2((x.0 - min.0) as f64),","highlight_start":46,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/general/convex_hull.rs","byte_start":260,"byte_end":280,"line_start":8,"line_end":8,"column_start":46,"column_end":66,"is_primary":true,"text":[{"text":"                ((x.1 - min.1) as f64).atan2((x.0 - min.0) as f64),","highlight_start":46,"highlight_end":66}],"label":null,"suggested_replacement":"(x.0 - min.0)","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`f64` -> `f64`)\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/general/convex_hull.rs:8:46\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                ((x.1 - min.1) as f64).atan2((x.0 - min.0) as f64),\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `(x.0 - min.0)`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`f64` -> `f64`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/general/convex_hull.rs","byte_start":324,"byte_end":346,"line_start":10,"line_end":10,"column_start":17,"column_end":39,"is_primary":true,"text":[{"text":"                ((x.1 - min.1) as f64).hypot((x.0 - min.0) as f64),","highlight_start":17,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/general/convex_hull.rs","byte_start":324,"byte_end":346,"line_start":10,"line_end":10,"column_start":17,"column_end":39,"is_primary":true,"text":[{"text":"                ((x.1 - min.1) as f64).hypot((x.0 - min.0) as f64),","highlight_start":17,"highlight_end":39}],"label":null,"suggested_replacement":"(x.1 - min.1)","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`f64` -> `f64`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/general/convex_hull.rs:10:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                ((x.1 - min.1) as f64).hypot((x.0 - min.0) as f64),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `(x.1 - min.1)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`f64` -> `f64`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/general/convex_hull.rs","byte_start":353,"byte_end":373,"line_start":10,"line_end":10,"column_start":46,"column_end":66,"is_primary":true,"text":[{"text":"                ((x.1 - min.1) as f64).hypot((x.0 - min.0) as f64),","highlight_start":46,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/general/convex_hull.rs","byte_start":353,"byte_end":373,"line_start":10,"line_end":10,"column_start":46,"column_end":66,"is_primary":true,"text":[{"text":"                ((x.1 - min.1) as f64).hypot((x.0 - min.0) as f64),","highlight_start":46,"highlight_end":66}],"label":null,"suggested_replacement":"(x.0 - min.0)","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`f64` -> `f64`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/general/convex_hull.rs:10:46\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                ((x.1 - min.1) as f64).hypot((x.0 - min.0) as f64),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `(x.0 - min.0)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"parameter is only used in recursion","code":{"code":"clippy::only_used_in_recursion","explanation":null},"level":"warning","spans":[{"file_name":"src/general/huffman_encoding.rs","byte_start":1190,"byte_end":1194,"line_start":46,"line_end":46,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"        &self,","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"parameter used here","code":null,"level":"note","spans":[{"file_name":"src/general/huffman_encoding.rs","byte_start":1628,"byte_end":1632,"line_start":63,"line_end":63,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                self.get_alphabet(height + 1, path, node.left.as_ref().unwrap(), map);","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/general/huffman_encoding.rs","byte_start":1715,"byte_end":1719,"line_start":64,"line_end":64,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                self.get_alphabet(","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: parameter is only used in recursion\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/general/huffman_encoding.rs:46:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        &self,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: parameter used here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/general/huffman_encoding.rs:63:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                self.get_alphabet(height + 1, path, node.left.as_ref().unwrap(), map);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                self.get_alphabet(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`f32` -> `f32`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/math/gaussian_elimination.rs","byte_start":1204,"byte_end":1227,"line_start":40,"line_end":40,"column_start":22,"column_end":45,"is_primary":true,"text":[{"text":"        let factor = matrix[j + 1][i] as f32 / matrix[i][i] as f32;","highlight_start":22,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/math/gaussian_elimination.rs","byte_start":1204,"byte_end":1227,"line_start":40,"line_end":40,"column_start":22,"column_end":45,"is_primary":true,"text":[{"text":"        let factor = matrix[j + 1][i] as f32 / matrix[i][i] as f32;","highlight_start":22,"highlight_end":45}],"label":null,"suggested_replacement":"matrix[j + 1][i]","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`f32` -> `f32`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/math/gaussian_elimination.rs:40:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let factor = matrix[j + 1][i] as f32 / matrix[i][i] as f32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `matrix[j + 1][i]`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`f32` -> `f32`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/math/gaussian_elimination.rs","byte_start":1230,"byte_end":1249,"line_start":40,"line_end":40,"column_start":48,"column_end":67,"is_primary":true,"text":[{"text":"        let factor = matrix[j + 1][i] as f32 / matrix[i][i] as f32;","highlight_start":48,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/math/gaussian_elimination.rs","byte_start":1230,"byte_end":1249,"line_start":40,"line_end":40,"column_start":48,"column_end":67,"is_primary":true,"text":[{"text":"        let factor = matrix[j + 1][i] as f32 / matrix[i][i] as f32;","highlight_start":48,"highlight_end":67}],"label":null,"suggested_replacement":"matrix[i][i]","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`f32` -> `f32`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/math/gaussian_elimination.rs:40:48\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let factor = matrix[j + 1][i] as f32 / matrix[i][i] as f32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `matrix[i][i]`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`f32` -> `f32`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/math/gaussian_elimination.rs","byte_start":1547,"byte_end":1570,"line_start":52,"line_end":52,"column_start":26,"column_end":49,"is_primary":true,"text":[{"text":"            let factor = matrix[j - 1][i] as f32 / matrix[i][i] as f32;","highlight_start":26,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/math/gaussian_elimination.rs","byte_start":1547,"byte_end":1570,"line_start":52,"line_end":52,"column_start":26,"column_end":49,"is_primary":true,"text":[{"text":"            let factor = matrix[j - 1][i] as f32 / matrix[i][i] as f32;","highlight_start":26,"highlight_end":49}],"label":null,"suggested_replacement":"matrix[j - 1][i]","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`f32` -> `f32`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/math/gaussian_elimination.rs:52:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let factor = matrix[j - 1][i] as f32 / matrix[i][i] as f32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `matrix[j - 1][i]`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`f32` -> `f32`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/math/gaussian_elimination.rs","byte_start":1573,"byte_end":1592,"line_start":52,"line_end":52,"column_start":52,"column_end":71,"is_primary":true,"text":[{"text":"            let factor = matrix[j - 1][i] as f32 / matrix[i][i] as f32;","highlight_start":52,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/math/gaussian_elimination.rs","byte_start":1573,"byte_end":1592,"line_start":52,"line_end":52,"column_start":52,"column_end":71,"is_primary":true,"text":[{"text":"            let factor = matrix[j - 1][i] as f32 / matrix[i][i] as f32;","highlight_start":52,"highlight_end":71}],"label":null,"suggested_replacement":"matrix[i][i]","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`f32` -> `f32`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/math/gaussian_elimination.rs:52:52\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let factor = matrix[j - 1][i] as f32 / matrix[i][i] as f32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `matrix[i][i]`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`f32` -> `f32`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/math/gaussian_elimination.rs","byte_start":1682,"byte_end":1701,"line_start":54,"line_end":54,"column_start":46,"column_end":65,"is_primary":true,"text":[{"text":"                matrix[j - 1][k] -= factor * matrix[i][k] as f32;","highlight_start":46,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/math/gaussian_elimination.rs","byte_start":1682,"byte_end":1701,"line_start":54,"line_end":54,"column_start":46,"column_end":65,"is_primary":true,"text":[{"text":"                matrix[j - 1][k] -= factor * matrix[i][k] as f32;","highlight_start":46,"highlight_end":65}],"label":null,"suggested_replacement":"matrix[i][k]","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`f32` -> `f32`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/math/gaussian_elimination.rs:54:46\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                matrix[j - 1][k] -= factor * matrix[i][k] as f32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `matrix[i][k]`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"casting the result of `i128::abs()` to u128","code":{"code":"clippy::cast_abs_to_unsigned","explanation":null},"level":"warning","spans":[{"file_name":"src/math/pollard_rho.rs","byte_start":2198,"byte_end":2235,"line_start":76,"line_end":76,"column_start":28,"column_end":65,"is_primary":true,"text":[{"text":"                let diff = (x as i128 - y as i128).abs() as u128;","highlight_start":28,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_abs_to_unsigned","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::cast_abs_to_unsigned)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"replace with","code":null,"level":"help","spans":[{"file_name":"src/math/pollard_rho.rs","byte_start":2198,"byte_end":2235,"line_start":76,"line_end":76,"column_start":28,"column_end":65,"is_primary":true,"text":[{"text":"                let diff = (x as i128 - y as i128).abs() as u128;","highlight_start":28,"highlight_end":65}],"label":null,"suggested_replacement":"(x as i128 - y as i128).unsigned_abs()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting the result of `i128::abs()` to u128\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/math/pollard_rho.rs:76:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let diff = (x as i128 - y as i128).abs() as u128;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: replace with: `(x as i128 - y as i128).unsigned_abs()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_abs_to_unsigned\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::cast_abs_to_unsigned)]` on by default\u001b[0m\n\n"}
{"message":"casting the result of `i128::abs()` to u64","code":{"code":"clippy::cast_abs_to_unsigned","explanation":null},"level":"warning","spans":[{"file_name":"src/math/pollard_rho.rs","byte_start":2694,"byte_end":2729,"line_start":90,"line_end":90,"column_start":31,"column_end":66,"is_primary":true,"text":[{"text":"            current_gcd = gcd((x_start as i128 - y as i128).abs() as u64, number);","highlight_start":31,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_abs_to_unsigned","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"replace with","code":null,"level":"help","spans":[{"file_name":"src/math/pollard_rho.rs","byte_start":2694,"byte_end":2729,"line_start":90,"line_end":90,"column_start":31,"column_end":66,"is_primary":true,"text":[{"text":"            current_gcd = gcd((x_start as i128 - y as i128).abs() as u64, number);","highlight_start":31,"highlight_end":66}],"label":null,"suggested_replacement":"(x_start as i128 - y as i128).unsigned_abs()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting the result of `i128::abs()` to u64\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/math/pollard_rho.rs:90:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            current_gcd = gcd((x_start as i128 - y as i128).abs() as u64, number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: replace with: `(x_start as i128 - y as i128).unsigned_abs()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_abs_to_unsigned\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`u32` -> `u32`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/math/quadratic_residue.rs","byte_start":3244,"byte_end":3253,"line_start":104,"line_end":104,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"    let x1 = p as u32 - x0 as u32;","highlight_start":25,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/math/quadratic_residue.rs","byte_start":3244,"byte_end":3253,"line_start":104,"line_end":104,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"    let x1 = p as u32 - x0 as u32;","highlight_start":25,"highlight_end":34}],"label":null,"suggested_replacement":"x0","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`u32` -> `u32`)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/math/quadratic_residue.rs:104:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let x1 = p as u32 - x0 as u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `x0`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`usize` -> `usize`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/searching/kth_smallest.rs","byte_start":539,"byte_end":553,"line_start":23,"line_end":23,"column_start":26,"column_end":40,"is_primary":true,"text":[{"text":"    arr.swap(i as usize, pivot as usize);","highlight_start":26,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/searching/kth_smallest.rs","byte_start":539,"byte_end":553,"line_start":23,"line_end":23,"column_start":26,"column_end":40,"is_primary":true,"text":[{"text":"    arr.swap(i as usize, pivot as usize);","highlight_start":26,"highlight_end":40}],"label":null,"suggested_replacement":"pivot","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`usize` -> `usize`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/searching/kth_smallest.rs:23:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    arr.swap(i as usize, pivot as usize);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `pivot`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"manual implementation of an assign operation","code":{"code":"clippy::assign_op_pattern","explanation":null},"level":"warning","spans":[{"file_name":"src/sorting/shell_sort.rs","byte_start":669,"byte_end":684,"line_start":12,"line_end":12,"column_start":17,"column_end":32,"is_primary":true,"text":[{"text":"                pos = pos - gap;","highlight_start":17,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"replace it with","code":null,"level":"help","spans":[{"file_name":"src/sorting/shell_sort.rs","byte_start":669,"byte_end":684,"line_start":12,"line_end":12,"column_start":17,"column_end":32,"is_primary":true,"text":[{"text":"                pos = pos - gap;","highlight_start":17,"highlight_end":32}],"label":null,"suggested_replacement":"pos -= gap","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: manual implementation of an assign operation\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/sorting/shell_sort.rs:12:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                pos = pos - gap;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: replace it with: `pos -= gap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`usize` -> `usize`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/sorting/tim_sort.rs","byte_start":722,"byte_end":735,"line_start":31,"line_end":31,"column_start":28,"column_end":41,"is_primary":true,"text":[{"text":"    let mut left = vec![0; len1 as usize];","highlight_start":28,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/sorting/tim_sort.rs","byte_start":722,"byte_end":735,"line_start":31,"line_end":31,"column_start":28,"column_end":41,"is_primary":true,"text":[{"text":"    let mut left = vec![0; len1 as usize];","highlight_start":28,"highlight_end":41}],"label":null,"suggested_replacement":"len1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`usize` -> `usize`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/sorting/tim_sort.rs:31:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut left = vec![0; len1 as usize];\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `len1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`usize` -> `usize`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/sorting/tim_sort.rs","byte_start":766,"byte_end":779,"line_start":32,"line_end":32,"column_start":29,"column_end":42,"is_primary":true,"text":[{"text":"    let mut right = vec![0; len2 as usize];","highlight_start":29,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/sorting/tim_sort.rs","byte_start":766,"byte_end":779,"line_start":32,"line_end":32,"column_start":29,"column_end":42,"is_primary":true,"text":[{"text":"    let mut right = vec![0; len2 as usize];","highlight_start":29,"highlight_end":42}],"label":null,"suggested_replacement":"len2","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`usize` -> `usize`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/sorting/tim_sort.rs:32:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut right = vec![0; len2 as usize];\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `len2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"casting to the same type is unnecessary (`usize` -> `usize`)","code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","spans":[{"file_name":"src/sorting/tim_sort.rs","byte_start":1429,"byte_end":1463,"line_start":70,"line_end":70,"column_start":19,"column_end":53,"is_primary":true,"text":[{"text":"    let min_run = min_run_length(MIN_MERGE) as usize;","highlight_start":19,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/sorting/tim_sort.rs","byte_start":1429,"byte_end":1463,"line_start":70,"line_end":70,"column_start":19,"column_end":53,"is_primary":true,"text":[{"text":"    let min_run = min_run_length(MIN_MERGE) as usize;","highlight_start":19,"highlight_end":53}],"label":null,"suggested_replacement":"min_run_length(MIN_MERGE)","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: casting to the same type is unnecessary (`usize` -> `usize`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/sorting/tim_sort.rs:70:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let min_run = min_run_length(MIN_MERGE) as usize;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `min_run_length(MIN_MERGE)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\u001b[0m\n\n"}
{"message":"unused return value of `std::boxed::Box::<T>::from_raw` that must be used","code":{"code":"unused_must_use","explanation":null},"level":"warning","spans":[{"file_name":"src/data_structures/rb_tree.rs","byte_start":6911,"byte_end":6930,"line_start":218,"line_end":218,"column_start":13,"column_end":32,"is_primary":true,"text":[{"text":"            Box::from_raw(node);","highlight_start":13,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"call `drop(Box::from_raw(ptr))` if you intend to drop the `Box`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_must_use)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused return value of `std::boxed::Box::<T>::from_raw` that must be used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/data_structures/rb_tree.rs:218:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Box::from_raw(node);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: call `drop(Box::from_raw(ptr))` if you intend to drop the `Box`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_must_use)]` on by default\u001b[0m\n\n"}
{"message":"51 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 51 warnings emitted\u001b[0m\n\n"}
