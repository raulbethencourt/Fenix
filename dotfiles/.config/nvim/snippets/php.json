{
    "Bns new bean": {
        "prefix": "bnsnb",
        "body": ["\\$${1:val} = BeanFactory::newBean('${2:module}');", "$3"],
        "description": "New bean for bns"
    },
    "Bns get bean": {
        "prefix": "bnsgb",
        "body": [
            "\\$${1:val} = BeanFactory::getBean('${2:module}', $${3:bean_id});",
            "$4"
        ],
        "description": "Get bean for bns"
    },
    "Bns retrieve bean": {
        "prefix": "bnsrb",
        "body": [
            "\\$${1:val} = BeanFactory::retrieveBean('${2:module}', $${3:bean_id});",
            "$4"
        ],
        "description": "New bean for bns"
    },
    "Add Docs block": {
        "prefix": "doc",
        "body": [
            "/**",
            " * ${1:Comment...}",
            " *",
            " * @param ${2:type} \\$${3:variable} ${4:description}",
            " *",
            " * @return ${5:type}",
            " */"
        ],
        "description": "Add docs block"
    },
    "Bns load relationship": {
        "prefix": "bnsblr",
        "body": [
            "if (\\$bean->load_relationship('${1:relation}'))",
            "{",
            "   \\$${2:variable} = \\$bean->${1:relation}->${3:fn}();",
            "}"
        ],
        "description": "load relationship to get ids."
    },
    "Bns php html echo": {
        "prefix": "bnspeco",
        "body": ["<?= \\$${1:variable} ?>"],
        "description": "Bns for echo in html."
    },
    "Simple var_dump to get queries in screen": {
        "prefix": "vdq",
        "body": ["var_dump($${1:variable});exit;"],
        "description": "Var dump to get queries in screen."
    },
    "Simple printf with pre tag": {
        "prefix": "pfv",
        "body": ["printf('<pre>%s</pre>', var_export(\\$${1:variable}));exit;"],
        "description": "Printf with pre tag and var_export"
    },
    "BnsWebservice var_dump and find": {
        "prefix": "vdwf",
        "body": ["exit('${1:Hello World} !! =====>>');"],
        "description": "Var_dump for the bnsWebService to find position."
    },
    "BnsWebservice var_dump": {
        "prefix": "vdwf",
        "body": ["exit($${1:varibale});"],
        "description": "Var_dump for the bnsWebService."
    },
    "Var_dump and exit": {
        "prefix": "vdp",
        "body": ["echo'<pre>';var_dump($${1:varibale});echo'</pre>';exit;"],
        "description": "Var_dump and exit wih pre tag."
    },
    "Var_dump and find": {
        "prefix": "vdf",
        "body": [
            "echo'<pre>';var_dump('${1:Hello World} !! =====>>');echo'</pre>';exit;"
        ],
        "description": "Var_dump to find position."
    },
    "Logs": {
        "prefix": "vdl",
        "body": ["\\$GLOBALS['log']->fatal($${1:varibale});"],
        "description": "Var_dump equivalent for logs."
    },
    "Logs and find": {
        "prefix": "vdlf",
        "body": ["\\$GLOBALS['log']->fatal('${1:Hello World} !! =====>>');"],
        "description": "Var_dump equivalent to find position inside logs."
    },
    "Bns creates query": {
        "prefix": "bnsquery",
        "body": [
            "\\$query = \"SELECT ${1:val}",
            "          FROM ${2:val}",
            "          WHERE ${3:val}\";",
            "",
            "\\$db = &\\$GLOBALS['db']->getConnection();",
            "\\$result = \\$db->executeQuery(\\$query);",
            "if (\\$result->rowCount() >= 1) {",
            "    while (\\$row = \\$result->fetch()) {",
            "        ${4:// code...}",
            "    }",
            "}"
        ],
        "description": "Snippets pour la creation d'un requete."
    },
    "Bns update query for hooks": {
        "prefix": "bnsqueryup",
        "body": [
            "\\$values_cstm = [];",
            "\\$values_cstm['${1:val}'] = $${2:val};",
            "\\$q = set_bns_dbquotearray(\\$values_cstm);",
            "\\$db = &\\$GLOBALS['db']->getConnection();",
            "\\$query_update = 'UPDATE contacts_cstm SET '.implode(', ', \\$q).\" WHERE id_c='\\$bean->id'\";",
            "\\$db->executeQuery(\\$query_update);"
        ],
        "description": "Snippets pour la creation d'un requete pour les hooks."
    },
    "Bns creates query getOne": {
        "prefix": "bnsqueryone",
        "body": [
            "&\\$GLOBALS['db']->getOne(\"SELECT ${1:val}",
            "          FROM ${2:val}",
            "          WHERE ${3:val}\");"
        ],
        "description": "Snippets pour la creation d'un requete pour recupere un record."
    },
    "Bns logicHook fn": {
        "prefix": "bnshook",
        "body": [
            "/**",
            " * ${1:type} - ${2:comment...}",
            " *",
            " * @param object $bean",
            " * @param string $event",
            " * @param array  $args",
            " *",
            " * @return void",
            " */",
            "public function ${3:fnName}(object \\$bean, string \\$event, array \\$args): void",
            "{",
            "    ${4:// code..}",
            "",
            "    return;",
            "}"
        ],
        "description": "Template to create logic hook function."
    },
    "Bns scheduler fn": {
        "prefix": "bnsbatch",
        "body": [
            "<?php",
            "",
            "\\$job_strings[${1:type}] = '${2:name}';",
            "\\$mod_strings['${3:LBL}'] = '${4:description}';",
            "",
            "/**",
            " * ${5:description}",
            " *",
            " * @return bool",
            " */",
            "function ${6:name}(): bool",
            "{",
            "    \\$GLOBALS['log']->fatal('####################################################');",
            "    \\$GLOBALS['log']->fatal('---> Scheduler ${6:name} START');",
            "    \\$GLOBALS['log']->fatal('####################################################');",
            "",
            "    ${7:// code...}",
            "",
            "    \\$GLOBALS['log']->fatal('####################################################');",
            "    \\$GLOBALS['log']->fatal('---> Scheduler ${6:name} END');",
            "    \\$GLOBALS['log']->fatal('####################################################');",
            "",
            "    return true;",
            "}"
        ],
        "description": "Template to create batch function."
    }
}
