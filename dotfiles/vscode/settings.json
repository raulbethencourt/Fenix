{
  "editor.formatOnPaste": false,
  "editor.linkedEditing": true,
  "editor.occurrencesHighlight": false,
  "editor.suggest.insertMode": "replace",
  "editor.acceptSuggestionOnCommitCharacter": false,
  "explorer.autoReveal": false,
  "explorer.confirmDragAndDrop": false,
  "workbench.tree.indent": 15,
  "workbench.tree.renderIndentGuides": "always",
  "workbench.editor.enablePreview": false,
  "files.encoding": "utf8",
  "vscode-neovim.highlightGroups.highlights": {
    "IncSearch": {
      "borderStyle": "solid",
      "borderWidth": "1px"
    },
    "Search": {
      "borderStyle": "solid",
      "borderWidth": "1px"
    },
  },
  "editor.suggest.snippetsPreventQuickSuggestions": false,
  "telemetry.telemetryLevel": "off",
  "vscode-neovim.neovimExecutablePaths.darwin": "/usr/bin/nvim",
  "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",
  "vscode-neovim.neovimInitVimPaths.darwin": "$HOME/.config/nvim/init.lua",
  "vscode-neovim.neovimInitVimPaths.linux": "$HOME/.config/nvim/init.lua",
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  "whichkey.sortOrder": "alphabetically",
  "whichkey.delay": 0,
  "whichkey.bindings": [
    {
      "key": ";",
      "name": "commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "/",
      "name": "comment",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": "<C-/>"
    },
    {
      "key": "?",
      "name": "View All References",
      "type": "command",
      "command": "references-view.find",
      "when": "editorHasReferenceProvider"
    },
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "m",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "d",
      "name": "Debug...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart debug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "e",
      "name": "Toggle Explorer",
      "type": "command",
      "command": "workbench.action.toggleSidebarVisibility"
    },
    {
      "key": "f",
      "name": "Find & Replace...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "editor.action.startFindReplaceAction"
        },
        {
          "key": "s",
          "name": "Symbol",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "p",
          "name": "Project",
          "type": "command",
          "command": "workbench.action.replaceInFiles"
        }
      ]
    },
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "/",
          "name": "Search Commits",
          "command": "gitlens.showCommitSearch",
          "type": "command",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "a",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "B",
          "name": "Browse",
          "type": "command",
          "command": "gitlens.openFileInRemote"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "C",
          "name": "Cherry Pick",
          "type": "command",
          "command": "gitlens.views.cherryPick"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "F",
          "name": "Pull From",
          "type": "command",
          "command": "git.pullFrom"
        },
        {
          "key": "g",
          "name": "Graph",
          "type": "command",
          "command": "git-graph.view"
        },
        {
          "key": "h",
          "name": "Heatmap",
          "type": "command",
          "command": "gitlens.toggleFileHeatmap"
        },
        {
          "key": "H",
          "name": "History",
          "type": "command",
          "command": "git.viewFileHistory"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "j",
          "name": "Next Change",
          "type": "command",
          "command": "workbench.action.editor.nextChange"
        },
        {
          "key": "k",
          "name": "Previous Change",
          "type": "command",
          "command": "workbench.action.editor.previousChange"
        },
        {
          "key": "l",
          "name": "Toggle Line Blame",
          "type": "command",
          "command": "gitlens.toggleLineBlame",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "L",
          "name": "Toggle GitLens",
          "type": "command",
          "command": "gitlens.toggleCodeLens",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Push",
          "type": "command",
          "command": "git.push"
        },
        {
          "key": "P",
          "name": "Push",
          "type": "command",
          "command": "git.pull"
        },
        {
          "key": "s",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Status",
          "type": "command",
          "command": "gitlens.showQuickRepoStatus",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "t",
          "name": "Create Tag",
          "type": "command",
          "command": "git.createTag"
        },
        {
          "key": "T",
          "name": "Delete Tag",
          "type": "command",
          "command": "git.deleteTag"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    {
      "key": "h",
      "name": "Split Horizontal",
      "type": "command",
      "command": "workbench.action.splitEditorDown"
    },
    {
      "key": "i",
      "name": "Insert...",
      "type": "bindings",
      "bindings": [
        {
          "key": "j",
          "name": "Insert line below",
          "type": "command",
          "command": "editor.action.insertLineAfter"
        },
        {
          "key": "k",
          "name": "Insert line above",
          "type": "command",
          "command": "editor.action.insertLineBefore"
        },
        {
          "key": "s",
          "name": "Insert snippet",
          "type": "command",
          "command": "editor.action.insertSnippet"
        }
      ]
    },
    {
      "key": "j",
      "name": "Jump to matching bracket",
      "type": "command",
      "command": "editor.action.jumpToBracket"
    },
    {
      "key": "l",
      "name": "LSP...",
      "type": "bindings",
      "bindings": [
        {
          "key": ";",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.refactor",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "a",
          "name": "Auto Fix",
          "type": "command",
          "command": "editor.action.autoFix",
          "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
        },
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.revealDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.revealDeclaration"
        },
        {
          "key": "e",
          "name": "Errors",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "f",
          "name": "Format",
          "type": "command",
          "command": "editor.action.formatDocument",
          "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.goToImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "l",
          "name": "Code Lens",
          "type": "command",
          "command": "codelens.showLensesInCurrentLine"
        },
        {
          "key": "n",
          "name": "Next Problem",
          "type": "command",
          "command": "editor.action.marker.next",
          "when": "editorFocus"
        },
        {
          "key": "N",
          "name": "Next Problem (Proj)",
          "type": "command",
          "command": "editor.action.marker.nextInFiles",
          "when": "editorFocus"
        },
        {
          "key": "o",
          "name": "Outline",
          "type": "command",
          "command": "outline.focus"
        },
        {
          "key": "p",
          "name": "Prev Problem",
          "type": "command",
          "command": "editor.action.marker.prevInFiles",
          "when": "editorFocus"
        },
        {
          "key": "P",
          "name": "Prev Problem (Proj)",
          "type": "command",
          "command": "editor.action.marker.prev",
          "when": "editorFocus"
        },
        {
          "key": "q",
          "name": "Quick Fix",
          "type": "command",
          "command": "editor.action.quickFix",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.goToReferences",
          "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "R",
          "name": "Rename",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "v",
          "name": "View All References",
          "type": "command",
          "command": "references-view.find",
          "when": "editorHasReferenceProvider"
        },
        {
          "key": "s",
          "name": "Go To Symbol",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "S",
          "name": "Show All Symbols",
          "type": "command",
          "command": "workbench.action.showAllSymbols"
        }
      ]
    },
    {
      "key": "M",
      "name": "Minimap",
      "type": "command",
      "command": "editor.action.toggleMinimap"
    },
    {
      "key": "n",
      "name": "No Highlight",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": ":noh<CR>"
    },
    {
      "key": "o",
      "name": "Open...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Directory",
          "type": "command",
          "command": "workbench.action.files.openFolder"
        },
        {
          "key": "r",
          "name": "Recent",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "workbench.action.files.openFile"
        }
      ]
    },
    {
      "key": "p",
      "name": "Peek...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.peekDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.peekDeclaration"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.peekImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "p",
          "name": "Toggle Focus",
          "type": "command",
          "command": "togglePeekWidgetFocus",
          "when": "inReferenceSearchEditor || referenceSearchVisible"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "t",
          "name": "Type Definition",
          "type": "command",
          "command": "editor.action.peekTypeDefinition"
        }
      ]
    },
    {
      "key": "s",
      "name": "Search...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Files",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "t",
          "name": "Text",
          "type": "command",
          "command": "workbench.action.findInFiles"
        },
        {
          "key": "p",
          "name": "Project",
          "type": "command",
          "command": "search.action.openNewEditorToSide"
        }
      ]
    },
    {
      "key": "S",
      "name": "Show...",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "u",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        }
      ]
    },
    {
      "key": "v",
      "name": "Split Vertical",
      "type": "command",
      "command": "workbench.action.splitEditor"
    },
    {
      "key": "w",
      "name": "Save file",
      "type": "command",
      "command": "workbench.action.files.save"
    },
    {
      "key": "c",
      "name": "Close Editor buffer",
      "type": "command",
      "command": "workbench.action.closeActiveEditor"
    },
    {
      "key": "y",
      "name": "Window...",
      "type": "bindings",
      "bindings": [
        {
          "key": "W",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "h",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "j",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "k",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "l",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "x",
      "name": "Extensions",
      "type": "command",
      "command": "workbench.view.extensions"
    },
    {
      "key": "z",
      "name": "Toggle zen mode",
      "type": "command",
      "command": "workbench.action.toggleZenMode"
    }
  ],
  "editor.bracketPairColorization.independentColorPoolPerBracketType": false,
  "editor.fontFamily": "Victor Mono",
  "editor.fontWeight": "500",
  "editor.fontLigatures": true,
  "git.ignoreLimitWarning": true,
  "editor.cursorStyle": "block",
  "editor.cursorBlinking": "smooth",
  "git.autofetch": true,
  "intelephense.environment.phpVersion": "7.3.17",
  "intelephense.maxMemory": 2000,
  "git.enableSmartCommit": true,
  "editor.suggestSelection": "first",
  "[html]": {
    "editor.formatOnSave": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
  },
  "[nodejs]": {
    "editor.formatOnSave": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
  },
  "[javascript]": {
    "editor.formatOnSave": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
  },
  "[css]": {
    "editor.formatOnSave": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
  },
  "[php]": {
    "editor.defaultFormatter": "bmewburn.vscode-intelephense-client",
    "editor.formatOnSave": false
  },
  "files.associations": {
    "*.html": "html",
    "*.module": "php",
    "*.twig": "twig",
    "*.js": "javascript"
  },
  "emmet.triggerExpansionOnTab": true,
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "vue-html": "html",
    "razor": "html",
    "plaintext": "pug",
    "twig": "html"
  },
  "intelephense.files.associations": [
    "*.php",
    "*.phtml"
  ],
  "intelephense.files.exclude": [
    "**/.svn/**",
    "**/.hg/**",
    "**/CVS/**",
    "**/bower_components/**"
  ],
  "editor.formatOnSave": false,
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "typescript.suggest.paths": false,
  "files.exclude": {
    "**/.DS_Store": false,
    "**/.git": false
  },
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/**": true,
    "**/vendor/**": true,
    "**/var/**": true
  },
  "search.exclude": {
    "**/node_modules": false
  },
  "editor.quickSuggestions": {
    "other": true,
    "comments": true,
    "strings": true
  },
  "json.maxItemsComputed": 15000,
  "scm.alwaysShowRepositories": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": true,
    "source.fixAll.markdownlint": true
  },
  "extensions.autoUpdate": false,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.shellIntegration.decorationIcon": "circle-outline",
  "terminal.integrated.shellIntegration.decorationIconSuccess": "primitive-dot",
  "terminal.integrated.shellIntegration.decorationIconError": "error-small",
  "terminal.integrated.fontSize": 15,
  "terminal.integrated.profiles.linux": {
    "zsh": {
      "path": "/usr/bin/zsh"
    },
    "tmux": {
      "path": "/usr/bin/tmux",
      "icon": "terminal-tmux"
    },
    "pwsh": {
      "path": "pwsh",
      "icon": "terminal-powershell"
    },
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "terminal.integrated.fontFamily": "FiraCode Nerd Font",
  "explorer.confirmDelete": false,
  "workbench.editor.decorations.badges": true,
  "editor.renderWhitespace": "none",
  "workbench.startupEditor": "none",
  "terminal.integrated.tabs.enabled": true,
  "git.ignoreLegacyWarning": true,
  "editor.fontSize": 14,
  "remote.SSH.configFile": "/home/raul/.ssh/config",
  "editor.tabSize": 4,
  "workbench.list.automaticKeyboardNavigation": false,
  "editor.scrollbar.horizontal": "hidden",
  "editor.scrollbar.vertical": "hidden",
  "terminal.external.osxExec": "iTerm.app",
  "emmet.showSuggestionsAsSnippets": true,
  "editor.snippetSuggestions": "top",
  "remote.SSH.showLoginTerminal": false,
  "remote.SSH.enableRemoteCommand": true,
  "remote.SSH.useLocalServer": false,
  "git.terminalAuthentication": false,
  "editor.scrollBeyondLastLine": false,
  "security.workspace.trust.untrustedFiles": "open",
  "php-docblocker.gap": false,
  "editor.lineNumbers": "relative",
  "terminal.integrated.scrollback": 10000,
  "editor.bracketPairColorization.enabled": false,
  "terminal.integrated.windowsEnableConpty": false,
  "files.autoGuessEncoding": true,
  "editor.guides.bracketPairsHorizontal": false,
  "editor.guides.highlightActiveBracketPair": false,
  "editor.minimap.enabled": false,
  "prettier.tabWidth": 4,
  "prettier.singleQuote": true,
  "breadcrumbs.enabled": false,
  "partialDiff.preComparisonTextNormalizationRules": [
    {
      "name": "Replace tabs with whitespaces",
      "match": "\t",
      "replaceWith": "  "
    },
    {
      "name": "One space after comma",
      "match": ", *([^,\n]+)",
      "replaceWith": ", $1"
    },
    {
      "name": "Capitalise",
      "match": ".*",
      "replaceWith": {
        "letterCase": "upper"
      },
      "enableOnStart": false
    }
  ],
  "partialDiff.enableTelemetry": false,
  "gruvboxMaterial.darkCursor": "green",
  "gruvboxMaterial.darkSelection": "green",
  "gruvboxMaterial.diagnosticTextBackgroundOpacity": "25%",
  "gruvboxMaterial.italicKeywords": true,
  "workbench.productIconTheme": "icons-carbon",
  "editor.wordWrapColumn": 90,
  "vscode-neovim.logOutputToConsole": false,
  "editor.suggest.showStatusBar": true,
  "cSpell.language": "en,fr",
  "terminal.integrated.shellIntegration.enabled": true,
  "remote.SSH.remotePlatform": {
    "vh23": "linux",
    "vh34": "linux",
    "vh37": "linux",
    "vh33": "linux"
  },
  "remote.SSH.remoteServerListenOnSocket": true,
  "remote.SSH.serverInstallPath": {
    "vh34": "/home/raul-bns/"
  },
  "gruvboxMaterial.darkContrast": "hard",
  "terminal.integrated.gpuAcceleration": "on",
  "workbench.iconTheme": "vscode-icons",
  "vsintellicode.modify.editor.suggestSelection": "choseToUpdateConfiguration",
  "workbench.panel.defaultLocation": "right",
  "sync.gist": "08c5e4e771938e2dd70c3325401bcf23",
  "whichkey.showIcons": false,
  "whichkey.showButtons": false,
  "terminal.integrated.smoothScrolling": true,
  "editor.smoothScrolling": true,
  "workbench.list.smoothScrolling": true,
  "editor.cursorSmoothCaretAnimation": true,
  "workbench.colorCustomizations": {
    "[Gruvbox Material Dark]": {
      "editor.background": "#1a1a1a",
      "terminal.background": "#1a1a1a",
      "banner.background": "#1a1a1a",
      "panel.background": "#1a1a1a",
      "breadcrumb.background": "#1a1a1a",
      "tab.activeBackground": "#1a1a1a",
      "tab.inactiveBackground": "#1a1a1a",
      "sideBar.background": "#1a1a1a",
      "editorGroupHeader.noTabsBackground": "#1a1a1a",
      "editorGroupHeader.tabsBackground": "#1a1a1a",
      "editorWidget.background": "#1a1a1a",
      "editorSuggestWidget.background": "#1a1a1a",
      "editorHoverWidget.background": "#1a1a1a"
    },
    "[Rosé Pine]": {
      "editor.background": "#1c1c1c",
      "terminal.background": "#1c1c1c",
      "banner.background": "#1c1c1c",
      "panel.background": "#1c1c1c",
      "breadcrumb.background": "#1c1c1c",
      "tab.activeBackground": "#262533",
      "tab.activeBorder": "#5c50a8",
      "tab.inactiveBackground": "#1c1c1c",
      "sideBar.background": "#1c1c1c",
      "editorGroupHeader.noTabsBackground": "#1c1c1c",
      "editorGroupHeader.tabsBackground": "#1c1c1c",
      "editorWidget.background": "#1c1c1c",
      "editorSuggestWidget.background": "#1c1c1c",
      "editorHoverWidget.background": "#1c1c1c",
      "dropdown.background": "#1c1c1c",
      "scrollbarSlider.background": "#1c1c1c",
      "progressBar.background": "#1c1c1c",
      "editorGutter.background": "#1c1c1c",
      "commandCenter.background": "#1c1c1c",
      "activityBar.background": "#1c1c1c",
      "editorPane.background": "#1c1c1c",
      "sideBySideEditor.verticalBorder": "#1c1c1c",
      "editorOverviewRuler.background": "#1c1c1c",
      "quickInput.background": "#1c1c1c",
      "editorOverviewRuler.border": "#1c1c1c",
    },
  },
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "scope": [
          //following will be in italic (=FlottFlott)
          "comment",
          "constant", //String, Number, Boolean…, this, super
          "storage.modifier", //static keyword
          "storage.type.class.js", //class keyword
        ],
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "scope": [
          //following will be excluded from italics (VSCode has some defaults for italics)
          "invalid",
          "keyword.operator",
          "constant.numeric.css",
          "keyword.other.unit.px.css",
          "constant.numeric.decimal.js",
          "constant.numeric.json"
        ],
        "settings": {
          "fontStyle": ""
        }
      }
    ]
  },
  "editor.foldingMaximumRegions": 10000,
  "materialTheme.accent": "Tomato",
  "vsicons.dontShowNewVersionMessage": true,
  "workbench.statusBar.visible": false,
  "workbench.colorTheme": "Rosé Pine",
  "workbench.activityBar.visible": false
}